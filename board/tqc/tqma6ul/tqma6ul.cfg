/*
 * Copyright (C) 2016 Marco Felsch <Marco.Felsch@tq-group.com>
 * Copyright (C) 2017 Markus Niebel <Markus.Niebel@tq-group.com>
 *
 * SPDX-License-Identifier:	GPL-2.0+
 *
 * Refer doc/README.imximage for more details about how-to configure
 * and create imximage boot image
 *
 * The syntax is taken as close as possible with the kwbimage
 */

#define __ASSEMBLY__
#include <config.h>
#include <asm/imx-common/imximage.cfg>

/* image version */

IMAGE_VERSION 2

/*
 * Boot Device : one of
 * spi, sd (the board has no nand neither onenand)
 */
#if defined(CONFIG_TQMA6UL_MMC_BOOT)
BOOT_FROM	sd
#elif defined(CONFIG_TQMA6UL_QSPI_BOOT)
BOOT_FROM	qspi
#endif

#ifdef CONFIG_SECURE_BOOT
CSF CONFIG_CSF_SIZE
#endif

/* TQMa6UL DDR config */

/*
 * Device Configuration Data (DCD)
 *
 * Each entry must have the format:
 * Addr-type           Address        Value
 *
 * where:
 *	Addr-type register length (1,2 or 4 bytes)
 *	Address	  absolute address of the register
 *	value	  value to be stored in the register
 */

/* Enable all clocks */
DATA 4 0x020c4068 0xffffffff	/* [CCM_CCGR0]CCM Clock Gating Register 0 */
DATA 4 0x020c406c 0xffffffff	/* [CCM_CCGR0]CCM Clock Gating Register 1 */
DATA 4 0x020c4070 0xffffffff	/* [CCM_CCGR0]CCM Clock Gating Register 2 */
DATA 4 0x020c4074 0xffffffff	/* [CCM_CCGR0]CCM Clock Gating Register 3 */
DATA 4 0x020c4078 0xffffffff	/* [CCM_CCGR0]CCM Clock Gating Register 4 */
DATA 4 0x020c407c 0xffffffff	/* [CCM_CCGR0]CCM Clock Gating Register 5 */
DATA 4 0x020c4080 0xffffffff	/* [CCM_CCGR0]CCM Clock Gating Register 6 */
/*
 * =====================================================================
 * IOMUX
 * =====================================================================
 */
/* DDR IO TYPE: */
DATA 4 0x020E04B4 0x000C0000	/* IOMUXC_SW_PAD_CTL_GRP_DDR_TYPE */
DATA 4 0x020E04AC 0x00000000	/* IOMUXC_SW_PAD_CTL_GRP_DDRPKE */
/* CLOCK: */
DATA 4 0x020E027C 0x00000030	/* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK0_P */
/* Control: */
DATA 4 0x020E0250 0x00000030	/* IOMUXC_SW_PAD_CTL_PAD_DRAM_CAS */
DATA 4 0x020E024C 0x00000030	/* IOMUXC_SW_PAD_CTL_PAD_DRAM_RAS */
DATA 4 0x020E0490 0x00000030	/* IOMUXC_SW_PAD_CTL_GRP_ADDDS */
DATA 4 0x020E0288 0x00000030	/* IOMUXC_SW_PAD_CTL_PAD_DRAM_RESET */
DATA 4 0x020E0270 0x00000000	/* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDBA2 -> see IOMUXC_SW_PAD_CTL_GRP_CTLDS */
DATA 4 0x020E0260 0x00000030	/* IOMUXC_SW_PAD_CTL_PAD_DRAM_ODT0 */
DATA 4 0x020E0264 0x00000030	/* IOMUXC_SW_PAD_CTL_PAD_DRAM_ODT1 */
DATA 4 0x020E04A0 0x00000030	/* IOMUXC_SW_PAD_CTL_GRP_CTLDS */
/* Data Strobes: */
DATA 4 0x020E0494 0x00020000	/* IOMUXC_SW_PAD_CTL_GRP_DDRMODE_CTL */
DATA 4 0x020E0280 0x00000030	/* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS0_P */
DATA 4 0x020E0284 0x00000030	/* IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS1_P */
/* Data: */
DATA 4 0x020E04B0 0x00020000	/* IOMUXC_SW_PAD_CTL_GRP_DDRMODE */
DATA 4 0x020E0498 0x00000030	/* IOMUXC_SW_PAD_CTL_GRP_B0DS */
DATA 4 0x020E04A4 0x00000030	/* IOMUXC_SW_PAD_CTL_GRP_B1DS */
DATA 4 0x020E0244 0x00000030	/* IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM0 */
DATA 4 0x020E0248 0x00000030	/* IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM1 */
/*
 * =====================================================================
 * DDR Controller Registers
 * =====================================================================
 */
DATA 4 0x021B001C 0x00008000	/* MMDC_MDSCR */
/*
 * =====================================================================
 * Calibrations:
 * =====================================================================
 */
DATA 4 0x021B0800 0xA1390003	/* DDR_PHY_P0_MPZQHWCTRL */
DATA 4 0x021B080C 0x00000000	/* MMDC_MPWLDECTRL0 */
DATA 4 0x021B083C 0x41490145	/* MMDC_MPDGCTRL0 TODO: 0x41480144 */
DATA 4 0x021B0848 0x40404546	/* MMDC_MPRDDLCTL TODO: 0x40404E54 */
DATA 4 0x021B0850 0x4040524D	/* MMDC_MPWRDLCTL TODO: 0x40404E48 */
DATA 4 0x021B081C 0x33333333	/* MMDC_MPRDDQBY0DL */
DATA 4 0x021B0820 0x33333333	/* MMDC_MPRDDQBY1DL */
DATA 4 0x021B082C 0xf3333333	/* MMDC_MPWRDQBY0DL */
DATA 4 0x021B0830 0xf3333333	/* MMDC_MPWRDQBY1DL */
DATA 4 0x021B08C0 0x00921012	/* MMDC_MPDCCR */
/* Complete calibration by forced measurement: */
DATA 4 0x021B08b8 0x00000800	/* DDR_PHY_P0_MPMUR0, frc_msr */
/*
 * =====================================================================
 * MMDC init:
 * =====================================================================
 */
DATA 4 0x021B0004 0x0002002D	/* MMDC0_MDPDC */
DATA 4 0x021B0008 0x00333030	/* MMDC0_MDOTC */
DATA 4 0x021B000C 0x676B52F3	/* MMDC0_MDCFG0 */
DATA 4 0x021B0010 0xB66D8B63	/* MMDC0_MDCFG1 */
DATA 4 0x021B0014 0x01FF00DB	/* MMDC0_MDCFG2 */
DATA 4 0x021B0018 0x00201740	/* MMDC0_MDMISC */
/* TODO: set configuration request again, also done by NXP */
DATA 4 0x021B001C 0x00008000	/* MMDC_MDSCR */
DATA 4 0x021B002C 0x000026D2	/* MMDC0_MDRWD */
DATA 4 0x021B0030 0x006B1023	/* MMDC0_MDOR */
DATA 4 0x021B0040 0x00000047	/* CS0_END */
DATA 4 0x021B0000 0x83180000	/* MMDC0_MDCTL */
/* Mode register writes for CS0 */
DATA 4 0x021B001C 0x02008032	/* MMDC0_MDSCR, MR2 write, CS0 */
DATA 4 0x021B001C 0x00008033	/* MMDC0_MDSCR, MR3 write, CS0 */
DATA 4 0x021B001C 0x00048031	/* MMDC0_MDSCR, MR1 write, CS0 */
DATA 4 0x021B001C 0x15208030	/* MMDC0_MDSCR, MR0 write, CS0 */
DATA 4 0x021B001C 0x04008040	/* MMDC0_MDSCR, ZQ calibration command sent to device on CS0 */
/* Mode register writes for CS1, not used / needed */
/* final DDR setup, before operation start: */
DATA 4 0x021B0020 0x00000800	/* MMDC0_MDREF */
DATA 4 0x021B0818 0x00000227	/* DDR_PHY_P0_MPODTCTRL */
DATA 4 0x021B0004 0x0002552D	/* MMDC0_MDPDC */
DATA 4 0x021B0404 0x00011006	/* MMDC0_MAPSR */
DATA 4 0x021B001C 0x00000000	/* MMDC0_MDSCR */
